/*
 * encrypt2.h
 *
 *  Created on: Apr 23, 2024
 *      Author: Arthur Sandor
 */



/*
 * first stage ciphertext from encryption by DO
 */
struct arsanvkabe_cph_DO_s
{
	element_t cs; /* G_T */ // M=e(g,g)alpha*s_{2}
	element_t c;  /* G_1 */ // C= g^{beta *s_{2}} = h^{s_{2}}
	element_t g_s2;  /* G_1 */ //g_s2 = g^{s_{2}}
	element_t c_attd; /* G_2*/ // c_attd = H1(H2(j+epsilon))^{s2} = g2^{H2(j+epsilon) * {s2}}
	char* p; /* anonymized access policy using set homomorphism hashing */
	element_t witness; // sort of proof of ownership (like digital signature)
};

//-------------------------------------------------------------------------------------------------------------------------------------------

/*
 * second stage ciphertext from encryption by RRD (Resource-Rich Device)
 */
struct arsanvkabe_cph_RRD_s
{
	element_t cs; /* G_T */
	element_t c;  /* G_1 */
	struct bswabe_policy_t* p; // anonymized access policy

	/* Existing parameters from DO ciphertext */
	element_t gs2_do;  /* G_1 */
	element_t cs_do; /* G_T */
	element_t c_do;  /* G_1 */
	element_t c_attd_do; /* G_2*/
	element_t witness; /* DO ciphertext issuance Proof */
};


/*
 * Generate the first stage ciphertext by the resource-rich device (RRD)
 */
arsanvkabe_cph_RRD_t* arsanvkabe_encrypt2(bswabe_pub_t* pub, element_t m, arsanvkabe_cph_DO_t* cph_DO);

/*
 * second stage ciphertext generated by Resource-Rich Device (RRD) remote encryption in fahdabe
 */
typedef struct arsanvkabe_cph_RRD_s arsanvkabe_cph_RRD_t;
